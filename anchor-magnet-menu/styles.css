*,
*:after,
*:before {
  box-sizing: border-box;
}

body {
  background: light-dark(#fff, #000);
  display: flex;
  place-items: center;
  justify-content: center;
  min-height: 100svh;
  font-family: "SF Pro Text", "SF Pro Icons", "AOS Icons", "Helvetica Neue",
    Helvetica, Arial, sans-serif, system-ui;
  margin: 0;
  padding: 0.5rem;
}

body::before {
  --line: color-mix(in lch, canvasText 25%, transparent);
  --size: 40px;
  content: "";
  height: 100vh;
  width: 100vw;
  position: fixed;
  background:
    linear-gradient(90deg, var(--line) 1px, transparent 1px var(--size)) 0 -5vmin /
      var(--size) var(--size),
    linear-gradient(var(--line) 1px, transparent 1px var(--size)) 0 -5vmin / var(
        --size
      ) var(--size);
  mask: linear-gradient(-15deg, transparent 60%, white);
  top: 0;
  z-index: -1;
}

/* Base ul layout styles */
ul {
  display: flex;
  margin: 0;
  padding: 0;
  list-style: none;
  position: relative;
  flex-wrap: wrap;
  color: color-mix(
    in lch,
    canvasText 50%,
    canvas
  ); /* canvasText color new thing to learn */
  transition: color 0.2s;
  touch-action: none;
}

li {
  display: grid; /* to center items inside li element */
  place-items: center;
  font-weight: 400;
}

li a {
  display: inline-block;
  padding: 0.5rem 1.25rem;
  width: 100%;
  height: 100%;
  color: currentColor; /* to inherit color from above element (ul) */
  text-decoration: none;
}

:is(a, button) {
  outline-color: color-mix(
    in lch,
    canvasText,
    transparent 50%
  ); /* color-mix() new thing to learn */
}

a:is(:focus-visible, :hover),
ul:has(a:target:is(:focus-visible, :hover))::after {
  color: canvasText;
}

/*---*/
ul:has(a:is(:focus-visible, :hover)) {
  --intent: 1; /* this will be use as value in the opasity of ul:before ul:after */
}

/* Background and underline */
/* Background styles */
ul::before,
ul::after {
  --transition: 0.18s;
  content: "";
  position: fixed;
  pointer-events: none;
  opacity: var(--intent, 0);
  z-index: -1;
  border-radius: 6px;
  background: color-mix(in lch, canvasText, canvas 85%); /* canvasText canvas new thing to learn */ 
  transition:
    /*top var(--transition),*/
    left var(--transition),
    height var(--transition),
    opacity var(--transition),
    color var(--transition),
    width var(--transition);
  transition-timing-function: linear(
    0 0%,
    0.2342 12.49%,
    0.4374 24.99%,
    0.6093 37.49%,
    0.6835 43.74%,
    0.7499 49.99%,
    0.8086 56.25%,
    0.8593 62.5%,
    0.9023 68.75%,
    0.9375 75%,
    0.9648 81.25%,
    0.9844 87.5%,
    0.9961 93.75%,
    1 100%
  );
}

/* This is for de underline */
/* it will be shown only when the url match the href */
ul::after {
  /* top, left, height, width here are just for reference, their are not in use */
  /* will be redefined in the @support(anchor-name)*/
  /*top: calc(var(--target-y) * 1px);*/
  /*left: calc((var(--target-x) * 1px) + 1.25rem);*/
  /*height: calc(var(--target-height) * 1px);*/
  /*width: calc((var(--target-width) * 1px) - 2.5rem);*/
  opacity: 1;
  background: transparent;
  border-radius: 0;
  border-bottom: 2px solid currentColor;
  view-transition-name: target;
}

 /*Targeting */
@supports (anchor-name: --a) {
  a:target {
    anchor-name: --target;
  }
  li:has(a:is(:hover, :focus-visible)) {
    anchor-name: --anchor;
  }

  /* Background */
  ul::before {
    left: anchor(--anchor left);
    top: anchor(--anchor top);
    width: anchor-size(--anchor width);
    height: anchor-size(--anchor height);
  }

  /* Underline */
  ul::after {
    left: calc(anchor(--target left) + 1.25rem);
    top: anchor(--target top);
    width: calc(anchor-size(--target width) - 2.5rem);
    height: anchor-size(--target height);
  }
}
